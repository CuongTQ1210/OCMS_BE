// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OCMS_BOs;

#nullable disable

namespace OCMS_BOs.Migrations
{
    [DbContext(typeof(OCMSDbContext))]
    [Migration("20250119123358_newdbb")]
    partial class newdbb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OCMS_BOs.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "HeadMaster"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Training staff"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "HR"
                        },
                        new
                        {
                            RoleId = 5,
                            RoleName = "Instructor"
                        },
                        new
                        {
                            RoleId = 6,
                            RoleName = "Reviewer"
                        },
                        new
                        {
                            RoleId = 7,
                            RoleName = "Trainee"
                        });
                });

            modelBuilder.Entity("OCMS_BOs.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "ADM-1",
                            CreatedDate = new DateTime(2025, 1, 19, 12, 33, 58, 451, DateTimeKind.Utc).AddTicks(2198),
                            Email = "admin@gmail.com",
                            FullName = "Admin",
                            IsActive = true,
                            PasswordHash = "$2a$11$kKZ.ThFls9LjMf7OCUXvsOOe3s4uk.GOOnxUjZZ0esYkGHYOLz8Oq",
                            RoleId = 1,
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("OCMS_BOs.Entities.User", b =>
                {
                    b.HasOne("OCMS_BOs.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OCMS_BOs.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
